{"version":3,"sources":["components/GIReadyCard.js","components/defaultPhoto.js","components/Input.js","components/GeneralInfo.js","components/ReadyCard.js","components/Education.js","components/Experience.js","App.js","index.js"],"names":["ReadyCard","props","className","src","photo","alt","style","width","hight","name","phone","email","bio","type","onClick","top","right","defaultPhoto","Input","inputType","onChange","value","nameValue","id","maxLength","required","htmlFor","labelName","optional","title","GeneralInfo","useState","setName","setEmail","setPhone","setBio","setPhoto","toEdit","setToEdit","onSubmit","e","preventDefault","target","buttonStyle","places","map","place","key","positionOrDegree","moment","startDate","format","endDate","details","onEdit","onDelete","Education","handleChange","toChange","setState","prevState","school","i","schools","length","schoolsAdded","state","concat","editedSchool","filter","onCancel","newSchools","bind","content","cancelButton","this","Component","Experience","work","works","worksAdded","editedWork","newWorks","App","generalInfo","education","experience","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5be07e3.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ReadyCard(props) {\n    const imageStyle = {\n        width: 300,\n        hight: 300,\n    }\n\n    const buttonStyle = {\n        top: 20,\n        right: 20,\n    }\n\n    return (\n        <div className='col mx-auto mt-5'>\n        <div className=\"card mb-3\">\n                <div className=\"row no-gutters\">\n                    <div className=\"col-md-4\">\n                        <img src={props.photo} className=\"card-img\" alt=\"portfolio picture\" style={imageStyle}/>\n                    </div>\n                    \n                    <div className=\"col-md-8\">\n                        <div className=\"card-body\">\n                            <h3 className=\"card-title\">{props.name}</h3>\n                            <h5 className=\"card-text\">Phone number: {props.phone}</h5>\n                            <h5 className=\"card-text\">E-mail: {props.email}</h5>\n                            <p>{props.bio}</p>\n                            <button \n                                type=\"submit\" \n                                className=\"btn btn-primary position-absolute\" \n                                onClick={props.onClick}\n                                style = {buttonStyle}\n                            >\n                            Edit\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ReadyCard;","const defaultPhoto = 'https://innymarketing.pl/wp-content/uploads/2020/07/comment_ViS7EMJhnpC4pok0laS993x3ukS8z5Jj.jpg'\n\nexport default defaultPhoto;","import React from 'react';\nimport defaultPhoto from './defaultPhoto.js' \n\nfunction Input(props) {\n    let inputType;\n    if (props.type === 'textarea') {\n        inputType = <textarea \n                        onChange={props.onChange}\n                        value= {props.nameValue}\n                        id={props.name}\n                        className=\"form-control\"\n                        maxLength = {props.maxLength}\n                        required = {props.required}\n                    />\n    } else {\n        inputType = <input\n                    onChange={props.onChange}\n                    value={((props.name === 'photo') && (props.nameValue === defaultPhoto)) ? '' : props.nameValue}\n                    type={props.type}\n                    id={props.name}\n                    className=\"form-control\"\n                    required = {props.required}\n                />\n    }\n\n    return (\n        <div className=\"col form-group\">\n            <div className=\"form-group\">\n                <label htmlFor={props.name}>\n                    {props.labelName}\n                    {props.optional ? <abbr title='optional'>*</abbr> : ''}\n                    </label>\n                    {inputType}\n            </div>\n        </div>\n    )\n}\n\nexport default Input;\n","import React, {useState, useEffect} from 'react'; \nimport ReadyCard from './GIReadyCard.js';\nimport Input from './Input.js'\n\nimport defaultPhoto from './defaultPhoto.js' \n\nconst GeneralInfo = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const[phone, setPhone] = useState('');\n    const[bio, setBio] = useState('');                                  \n    const[photo, setPhoto] = useState('');\n\n    const [toEdit, setToEdit] = useState(true);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setToEdit(!toEdit)\n    }\n\n    const handlePhoto = (e) => {\n        if (e.target.value !== '') {\n            setPhoto(e.target.value);\n        } else {\n            setPhoto(defaultPhoto);\n        }\n\n    }\n\n    if (toEdit) {\n        return (\n            <div className='col mx-auto mt-5'>\n                <div className='card'>\n                    <div className='card-header'>\n                        <h3>General Information</h3>\n                    </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={onSubmit}>\n                            <div className='row'>\n                                < Input \n                                    name='name' \n                                    nameValue = {name}\n                                    labelName='Full name'\n                                    onChange={(e) => {setName(e.target.value)}}\n                                    type = 'text'\n                                    required = {true}\n                                />\n\n                                < Input \n                                    name='phone' \n                                    nameValue = {phone}\n                                    labelName='Phone number'\n                                    onChange={(e) => {setPhone(e.target.value)}}\n                                    type = 'phone'\n                                    required = {true}\n                                />\n                                <div className=\"w-100\"></div>\n\n                                < Input \n                                    name='email' \n                                    nameValue = {email}\n                                    labelName='E-mail'\n                                    onChange={(e) => {setEmail(e.target.value)}}\n                                    type = 'email'\n                                    required = {true}\n                                /> \n\n                                < Input \n                                    name='photo' \n                                    nameValue = {photo}\n                                    labelName='Photo URL'\n                                    onChange={handlePhoto}\n                                    type = 'url'\n                                    required = {false}\n                                    optional = {true}\n                                /> \n\n                            </div>\n                            <div className='row'>\n                                < Input \n                                    name='bio' \n                                    nameValue = {bio}\n                                    labelName='Bio'\n                                    onChange={(e) => {setBio(e.target.value)}}\n                                    required = {false}\n                                    optional = {true}\n                                    type = 'textarea'\n                                    maxLength =\"200\"\n                                /> \n                            </div>\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">\n                                Submit\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <ReadyCard \n            photo={photo} \n            name={name} \n            phone = {phone} \n            email= {email} \n            bio={bio}\n            onClick={onSubmit}/>\n    )\n}\n\nexport default GeneralInfo;","import React from 'react';\nimport moment from 'moment';\n\nfunction ReadyCard(props) {\n    const buttonStyle = {\n        top: 0,\n        right: 0,\n    }\n\n    const places = props.places.map((place,id) => {\n        return (\n            <div key = {place.id}>\n                {(id !== 0)? <hr></hr>: ''}\n                <div className = 'position-relative' >\n                    <h4>{place.name} - <i>{place.positionOrDegree}</i></h4>\n\n                        <p>From {moment(place.startDate).format('MMMM YYYY')} to {moment(place.endDate).format('MMMM YYYY')}.</p>\n\n                        <p>{place.details}</p>\n                        <div className=\"position-absolute\" style = {buttonStyle}>\n                            <button \n                                type=\"submit\" \n                                className=\"btn btn-primary\" \n                                onClick={() => {props.onEdit(place.id)}}\n                                >\n                                Edit\n                            </button>\n                            <button \n                                type=\"submit\" \n                                className=\"btn btn-danger ml-1\" \n                                onClick={() => {props.onDelete(place.id)}}                 \n                                >\n                                Delete\n                            </button>\n                        </div>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n            <div className=\"card-body\">\n                {places}\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary btn-lg btn-block\"\n                    onClick = {props.onClick}> \n                    Add next\n                </button>\n            </div>\n    )\n}\n\nexport default ReadyCard;","import React, {Component} from 'react'; \nimport Input from './Input.js'; \nimport ReadyCard from './ReadyCard.js'\n\n\nclass Education extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            schools: [],\n            school: {\n                name: '',\n                positionOrDegree: '', \n                startDate: '', \n                endDate: '',\n                details: '',\n                id: 0,\n            },\n            toEdit: true, \n            schoolsAdded: 0,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onEdit = this.onEdit.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n    }\n\n    handleChange = (e) => {\n        const toChange = e.target.id;\n        this.setState(prevState => {\n            return {\n                school: {\n                    ...prevState.school,\n                    [toChange]: e.target.value\n                }\n            }\n          });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit('education');\n        this.setState (prevState => { \n            for (let i = 0; i < prevState.schools.length; i ++) {\n                if (prevState.schools[i].id === prevState.school.id) {\n                    const newSchools = prevState.schools.map(school => {\n                        if (school.id === prevState.school.id) {\n                            return prevState.school\n                        } else {\n                            return school\n                        }\n                    })\n                    return {\n                        schools: newSchools,\n                        school: {\n                            name: '',\n                            positionOrDegree: '', \n                            startDate: '', \n                            endDate: '',\n                            details: '', \n                            id: prevState.schoolsAdded,\n                        },\n                        toEdit: !prevState.toEdit,\n                        schoolsAdded: prevState.schoolsAdded,\n                    }\n                }\n            }\n            return {\n                schools: this.state.schools.concat(this.state.school),\n                school: {\n                    name: '',\n                    positionOrDegree: '', \n                    startDate: '', \n                    endDate: '',\n                    details: '', \n                    id: prevState.schoolsAdded + 1,\n                },\n                toEdit: !prevState.toEdit,\n                schoolsAdded: prevState.schoolsAdded + 1,\n\n            }\n        })\n    }\n\n    onEdit = (id) => {\n        this.setState (prevState => {\n            const editedSchool = prevState.schools.filter(school => {\n                return (school.id === id)\n            })[0];\n            return  {\n                ...prevState,\n                school: {\n                    name: editedSchool.name,\n                    positionOrDegree: editedSchool.positionOrDegree, \n                    startDate: editedSchool.startDate, \n                    endDate: editedSchool.endDate,\n                    details: editedSchool.details, \n                    id: editedSchool.id,\n                },\n                toEdit: !prevState.toEdit\n            }\n        })\n    }\n\n    onClick = () => {\n        this.setState(prevState => {\n            return {\n                toEdit: !prevState.toEdit    \n            }\n        })\n    }\n\n    onCancel = () => {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                toEdit: !prevState.toEdit,\n                school: {\n                    name: '',\n                    positionOrDegree: '', \n                    startDate: '', \n                    endDate: '',\n                    details: '',\n                    id: prevState.schoolsAdded\n                },\n            }\n        })\n    }\n\n    onDelete = (id) => {\n        this.setState(prevState => {\n            const newSchools = prevState.schools.filter(school => {\n                return (school.id !== id)\n            })\n            if (prevState.schools.length === 1) {\n                return {\n                    ...prevState,\n                    schools: newSchools,\n                    toEdit: !prevState.toEdit\n                }\n            }\n            return {\n                ...prevState,\n                schools: newSchools\n            }\n        })\n    }\n\n    render() {\n        let content\n        let cancelButton = <button type=\"submit\" className=\"btn btn-secondary btn-lg btn-block\" onClick = {this.onCancel} >\n                            Cancel\n                            </button>\n        if (this.state.toEdit) {\n            content = <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className='row'>\n                                < Input \n                                    name='name' \n                                    nameValue = {this.state.school.name}\n                                    labelName='School name'\n                                    onChange={this.handleChange}\n                                    type = 'text'\n                                    required = {true}\n                                />\n\n                                < Input \n                                    name='positionOrDegree' \n                                    nameValue = {this.state.school.positionOrDegree}\n                                    labelName='Filed of study'\n                                    onChange={this.handleChange}\n                                    type = 'text'\n                                    required = {true}\n                                />\n\n                                <div className=\"w-100\"></div>\n\n                                < Input \n                                    name='startDate' \n                                    nameValue = {this.state.school.startDate}\n                                    labelName='Start date'\n                                    onChange={this.handleChange}\n                                    type = 'date'\n                                    required = {true}\n                                /> \n\n                                < Input \n                                    name='endDate' \n                                    nameValue = {this.state.school.endDate}\n                                    labelName='End date'\n                                    onChange={this.handleChange}\n                                    type = 'date'\n                                    required = {true}\n                                /> \n                            </div>\n                            <div className='row'>\n\n                                < Input \n                                    name='details' \n                                    nameValue = {this.state.school.details}\n                                    labelName='Additional information'\n                                    onChange={this.handleChange}\n                                    required = {false}\n                                    optional = {true}\n                                    type = 'textarea'\n                                    maxLength =\"400\"\n                                /> \n                            </div>\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">\n                                    Submit\n                                </button>\n                                {(this.state.schools.length > 0) ? cancelButton : null}\n                            </div>\n                        </form>\n                    </div>\n        } else {\n            content = <div>\n                <ReadyCard places = {this.state.schools} onClick = {this.onClick} onEdit = {this.onEdit} onDelete = {this.onDelete }/>\n            </div>\n        }\n        return (\n            <div className='col mx-auto mt-5'>\n                <div className='card'>\n                    <div className='card-header'>\n                        <h3>Education</h3>\n                    </div>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n    \nexport default Education;","import React, {Component} from 'react'; \nimport Input from './Input.js'; \nimport ReadyCard from './ReadyCard.js'\n\n\nclass Experience extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            works: [],\n            work: {\n                name: '',\n                positionOrDegree: '', \n                startDate: '', \n                endDate: '',\n                details: '',\n                id: 0,\n            },\n            toEdit: true, \n            worksAdded: 0,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onEdit = this.onEdit.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n    }\n\n    handleChange = (e) => {\n        const toChange = e.target.id;\n        this.setState(prevState => {\n            return {\n                work: {\n                    ...prevState.work,\n                    [toChange]: e.target.value\n                }\n            }\n          });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit('work');\n        this.setState (prevState => { \n            for (let i = 0; i < prevState.works.length; i ++) {\n                if (prevState.works[i].id === prevState.work.id) {\n                    const newWorks = prevState.works.map(work => {\n                        if (work.id === prevState.work.id) {\n                            return prevState.work\n                        } else {\n                            return work\n                        }\n                    })\n                    return {\n                        works: newWorks,\n                        work: {\n                            name: '',\n                            positionOrDegree: '', \n                            startDate: '', \n                            endDate: '',\n                            details: '', \n                            id: prevState.worksAdded,\n                        },\n                        toEdit: !prevState.toEdit,\n                        worksAdded: prevState.worksAdded,\n                    }\n                }\n            }\n            return {\n                works: this.state.works.concat(this.state.work),\n                work: {\n                    name: '',\n                    positionOrDegree: '', \n                    startDate: '', \n                    endDate: '',\n                    details: '', \n                    id: prevState.worksAdded + 1,\n                },\n                toEdit: !prevState.toEdit,\n                worksAdded: prevState.worksAdded + 1,\n\n            }\n        })\n    }\n\n    onCancel = () => {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                toEdit: !prevState.toEdit,\n                work: {\n                    name: '',\n                    positionOrDegree: '', \n                    startDate: '', \n                    endDate: '',\n                    details: '', \n                    id: prevState.worksAdded,\n                },\n            }\n        })\n    }\n\n\n    onEdit = (id) => {\n        this.setState (prevState => {\n            const editedWork = prevState.works.filter(work => {\n                return (work.id === id)\n            })[0];\n            return  {\n                ...prevState,\n                work: {\n                    name: editedWork.name,\n                    positionOrDegree: editedWork.positionOrDegree, \n                    startDate: editedWork.startDate, \n                    endDate: editedWork.endDate,\n                    details: editedWork.details, \n                    id: editedWork.id,\n                },\n                toEdit: !prevState.toEdit\n            }\n        })\n    }\n\n    onClick = () => {\n        this.setState(prevState => {\n            return {\n                toEdit: !prevState.toEdit    \n            }\n        })\n    }\n\n    onDelete = (id) => {\n        this.setState(prevState => {\n            const newWorks = prevState.works.filter(work => {\n                return (work.id !== id)\n            })\n            if (prevState.works.length === 1) {\n                return {\n                    ...prevState,\n                    works: newWorks,\n                    toEdit: !prevState.toEdit\n                }\n            }\n            return {\n                ...prevState,\n                works: newWorks,\n            }\n        })\n    }\n\n\n    render() {\n        let content\n        let cancelButton = <button type=\"submit\" className=\"btn btn-secondary btn-lg btn-block\" onClick = {this.onCancel} >\n                            Cancel\n                            </button>\n        if (this.state.toEdit) {\n            content = <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className='row'>\n                                < Input \n                                    name='name' \n                                    nameValue = {this.state.work.name}\n                                    labelName='Company name'\n                                    onChange={this.handleChange}\n                                    type = 'text'\n                                    required = {true}\n                                />\n\n                                < Input \n                                    name='positionOrDegree' \n                                    nameValue = {this.state.work.positionOrDegree}\n                                    labelName='Position'\n                                    onChange={this.handleChange}\n                                    type = 'text'\n                                    required = {true}\n                                />\n\n                                <div className=\"w-100\"></div>\n\n                                < Input \n                                    name='startDate' \n                                    nameValue = {this.state.work.startDate}\n                                    labelName='Start date'\n                                    onChange={this.handleChange}\n                                    type = 'date'\n                                    required = {true}\n                                /> \n\n                                < Input \n                                    name='endDate' \n                                    nameValue = {this.state.work.endDate}\n                                    labelName='End date'\n                                    onChange={this.handleChange}\n                                    type = 'date'\n                                    required = {true}\n                                /> \n                            </div>\n                            <div className='row'>\n\n                                < Input \n                                    name='details' \n                                    nameValue = {this.state.work.details}\n                                    labelName='Details'\n                                    onChange={this.handleChange}\n                                    required = {false}\n                                    optional = {true}\n                                    type = 'textarea'\n                                    maxLength =\"400\"\n                                /> \n                            </div>\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">\n                                    Submit\n                                </button>\n                                {(this.state.works.length > 0) ? cancelButton : null}\n                            </div>\n                        </form>\n                    </div>\n        } else {\n            content = <div>\n                <ReadyCard places = {this.state.works} onClick = {this.onClick} onEdit = {this.onEdit} onDelete = {this.onDelete }/>\n            </div>\n        }\n        return (\n            <div className='col mx-auto my-5'>\n                <div className='card'>\n                    <div className='card-header'>\n                        <h3>Work Experience</h3>\n                    </div>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n    \nexport default Experience;","import React, {Component} from 'react';\nimport GeneralInfo from './components/GeneralInfo'\nimport Education from './components/Education'\nimport Experience from './components/Experience'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      generalInfo: false,\n      education: false,\n      experience: false,\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n    handleChange = (props) => {\n      this.setState(prevState  => {\n          return {\n            [props]: !prevState.props\n          }\n        });\n  }\n\n  render () {\n    return (\n      <div className='container'>\n          <GeneralInfo onSubmit={this.handleChange}/>\n          <Education onSubmit={this.handleChange}/>\n          <Experience onSubmit={this.handleChange}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}