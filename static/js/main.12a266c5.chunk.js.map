{"version":3,"sources":["components/GIReadyCard.js","components/defaultPhoto.js","components/Input.js","components/GeneralInfo.js","components/ReadyCard.js","components/Education.js","components/Experience.js","App.js","index.js"],"names":["ReadyCard","props","className","src","photo","alt","style","width","hight","name","phone","email","bio","type","onClick","top","right","defaultPhoto","Input","inputType","onChange","value","nameValue","id","maxLength","required","htmlFor","labelName","optional","title","GeneralInfo","handleChange","e","toChange","target","setState","handlePhoto","onSubmit","preventDefault","prevState","toEdit","state","bind","this","Component","buttonStyle","places","map","place","key","positionOrDegree","moment","startDate","format","endDate","detail","onEdit","Education","school","i","schools","length","details","schoolsAdded","concat","editedSchool","filter","content","Experience","work","works","worksAdded","editedWork","workAdded","App","generalInfo","education","experience","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12a266c5.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ReadyCard(props) {\n    const imageStyle = {\n        width: 300,\n        hight: 300,\n    }\n\n    const buttonStyle = {\n        top: 20,\n        right: 20,\n    }\n\n    return (\n        <div className='col mx-auto mt-5'>\n        <div className=\"card mb-3\">\n                <div className=\"row no-gutters\">\n                    <div className=\"col-md-4\">\n                        <img src={props.photo} className=\"card-img\" alt=\"portfolio picture\" style={imageStyle}/>\n                    </div>\n                    \n                    <div className=\"col-md-8\">\n                        <div className=\"card-body\">\n                            <h3 className=\"card-title\">{props.name}</h3>\n                            <h5 className=\"card-text\">Phone number: {props.phone}</h5>\n                            <h5 className=\"card-text\">E-mail: {props.email}</h5>\n                            <p>{props.bio}</p>\n                            <button \n                                type=\"submit\" \n                                className=\"btn btn-primary position-absolute\" \n                                onClick={props.onClick}\n                                style = {buttonStyle}\n                            >\n                            Edit\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ReadyCard;","const defaultPhoto = 'https://innymarketing.pl/wp-content/uploads/2020/07/comment_ViS7EMJhnpC4pok0laS993x3ukS8z5Jj.jpg'\n\nexport default defaultPhoto;","import React from 'react';\nimport defaultPhoto from './defaultPhoto.js' \n\nfunction Input(props) {\n    let inputType;\n    if (props.type === 'textarea') {\n        inputType = <textarea \n                        onChange={props.onChange}\n                        value= {props.nameValue}\n                        id={props.name}\n                        className=\"form-control\"\n                        maxLength = {props.maxLength}\n                        required = {props.required}\n                    />\n    } else {\n        inputType = <input\n                    onChange={props.onChange}\n                    value={((props.name === 'photo') && (props.nameValue === defaultPhoto)) ? '' : props.nameValue}\n                    type={props.type}\n                    id={props.name}\n                    className=\"form-control\"\n                    required = {props.required}\n                />\n    }\n\n    return (\n        <div className=\"col form-group\">\n            <div className=\"form-group\">\n                <label htmlFor={props.name}>\n                    {props.labelName}\n                    {props.optional ? <abbr title='optional'>*</abbr> : ''}\n                    </label>\n                    {inputType}\n            </div>\n        </div>\n    )\n}\n\nexport default Input;\n","import React, {Component} from 'react'; \nimport ReadyCard from './GIReadyCard.js';\nimport Input from './Input.js'\n\nimport defaultPhoto from './defaultPhoto.js' \n\nclass GeneralInfo extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            name: '',\n            email: '', \n            phone: '',\n            photo: defaultPhoto, \n            bio: '',\n            toEdit: true,\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handlePhoto = this.handlePhoto.bind(this);\n    }\n\n    handleChange = (e) => {\n        const toChange = e.target.id\n        this.setState({\n            [toChange]: e.target.value,\n          });\n    }\n      \n    handlePhoto = (e) => {\n        if (e.target.value !== '') {\n            this.setState({\n                photo: e.target.value,\n              });\n        }\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit('generalInfo');\n        this.setState (prevState => { \n            return {\n                toEdit: !prevState.toEdit,\n                }\n        })\n    }\n    \n    render() {\n        if (this.state.toEdit) {\n            return (\n                <div className='col mx-auto mt-5'>\n                    <div className='card'>\n                        <div className='card-header'>\n                            <h3>General Information</h3>\n                        </div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.onSubmit}>\n                                <div className='row'>\n                                    < Input \n                                        name='name' \n                                        nameValue = {this.state.name}\n                                        labelName='Full name'\n                                        onChange={this.handleChange}\n                                        type = 'text'\n                                        required = {true}\n                                    />\n\n                                    < Input \n                                        name='phone' \n                                        nameValue = {this.state.phone}\n                                        labelName='Phone number'\n                                        onChange={this.handleChange}\n                                        type = 'phone'\n                                        required = {true}\n                                    />\n                                    <div className=\"w-100\"></div>\n\n                                    < Input \n                                        name='email' \n                                        nameValue = {this.state.email}\n                                        labelName='E-mail'\n                                        onChange={this.handleChange}\n                                        type = 'email'\n                                        required = {true}\n                                    /> \n\n                                    < Input \n                                        name='photo' \n                                        nameValue = {this.state.photo}\n                                        labelName='Photo URL'\n                                        onChange={this.handlePhoto}\n                                        type = 'url'\n                                        required = {false}\n                                        optional = {true}\n                                    /> \n\n                                </div>\n                                <div className='row'>\n                                    < Input \n                                        name='bio' \n                                        nameValue = {this.state.bio}\n                                        labelName='Bio'\n                                        onChange={this.handleChange}\n                                        required = {false}\n                                        optional = {true}\n                                        type = 'textarea'\n                                        maxLength =\"200\"\n                                    /> \n                                </div>\n\n                                <div className=\"form-group\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">\n                                    Submit\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <ReadyCard \n                photo={this.state.photo} \n                name={this.state.name} \n                phone = {this.state.phone} \n                email= {this.state.email} \n                bio={this.state.bio}\n                onClick={this.onSubmit}/>\n        )\n    }\n}\n\nexport default GeneralInfo;","import React from 'react';\nimport moment from 'moment';\n\nfunction ReadyCard(props) {\n    const buttonStyle = {\n        top: 0,\n        right: 0,\n    }\n\n    const places = props.places.map((place,id) => {\n        return (\n            <div>\n                {(id !== 0)? <hr></hr>: ''}\n                <div key = {place.id} className = 'position-relative' >\n                    <h4>{place.name} - <i>{place.positionOrDegree}</i></h4>\n\n                        <p>From {moment(place.startDate).format('MMMM YYYY')} to {moment(place.endDate).format('MMMM YYYY')}.</p>\n\n                        <p>{place.detail}</p>\n                        <button \n                                    type=\"submit\" \n                                    className=\"btn btn-primary position-absolute\" \n                                    onClick={() => {props.onEdit(place.id)}}\n                                    style = {buttonStyle}\n                                >\n                                Edit\n                                </button>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n            <div className=\"card-body\">\n                {places}\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary btn-lg btn-block\"\n                    onClick = {props.onClick}> \n                    Add next\n                </button>\n            </div>\n    )\n}\n\nexport default ReadyCard;","import React, {Component} from 'react'; \nimport Input from './Input.js'; \nimport ReadyCard from './ReadyCard.js'\n\n\nclass Education extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            schools: [],\n            school: {\n                name: '',\n                positionOrDegree: '', \n                startDate: '', \n                endDate: '',\n                details: '',\n                id: 0,\n            },\n            toEdit: true, \n            schoolsAdded: 0,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onEdit = this.onEdit.bind(this);\n    }\n\n    handleChange = (e) => {\n        const toChange = e.target.id;\n        this.setState(prevState => {\n            return {\n                school: {\n                    ...prevState.school,\n                    [toChange]: e.target.value\n                }\n            }\n          });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit('education');\n        this.setState (prevState => { \n            for (let i = 0; i < prevState.schools.length; i ++) {\n                if (prevState.schools[i].id === prevState.school.id) {\n                    const newSchools = prevState.schools.map(school => {\n                        if (school.id === prevState.school.id) {\n                            return prevState.school\n                        } else {\n                            return school\n                        }\n                    })\n                    return {\n                        schools: newSchools,\n                        school: {\n                            name: '',\n                            positionOrDegree: '', \n                            startDate: '', \n                            endDate: '',\n                            details: '', \n                            id: prevState.schoolsAdded,\n                        },\n                        toEdit: !prevState.toEdit,\n                        schoolsAdded: prevState.schoolsAdded,\n                    }\n                }\n            }\n            return {\n                schools: this.state.schools.concat(this.state.school),\n                school: {\n                    name: '',\n                    positionOrDegree: '', \n                    startDate: '', \n                    endDate: '',\n                    details: '', \n                    id: prevState.schoolsAdded + 1,\n                },\n                toEdit: !prevState.toEdit,\n                schoolsAdded: prevState.schoolsAdded + 1,\n\n            }\n        })\n    }\n\n    onEdit = (id) => {\n        this.setState (prevState => {\n            const editedSchool = prevState.schools.filter(school => {\n                return (school.id === id)\n            })[0];\n            return  {\n                ...prevState,\n                school: {\n                    name: editedSchool.name,\n                    positionOrDegree: editedSchool.positionOrDegree, \n                    startDate: editedSchool.startDate, \n                    endDate: editedSchool.endDate,\n                    details: editedSchool.details, \n                    id: editedSchool.id,\n                },\n                toEdit: !prevState.toEdit\n            }\n        })\n    }\n\n    onClick = () => {\n        this.setState(prevState => {\n            return {\n                toEdit: !prevState.toEdit    \n            }\n        })\n    }\n\n    render() {\n        let content\n        if (this.state.toEdit) {\n            content = <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className='row'>\n                                < Input \n                                    name='name' \n                                    nameValue = {this.state.school.name}\n                                    labelName='School name'\n                                    onChange={this.handleChange}\n                                    type = 'text'\n                                    required = {true}\n                                />\n\n                                < Input \n                                    name='positionOrDegree' \n                                    nameValue = {this.state.school.positionOrDegree}\n                                    labelName='Filed of study'\n                                    onChange={this.handleChange}\n                                    type = 'text'\n                                    required = {true}\n                                />\n\n                                <div className=\"w-100\"></div>\n\n                                < Input \n                                    name='startDate' \n                                    nameValue = {this.state.school.startDate}\n                                    labelName='Start date'\n                                    onChange={this.handleChange}\n                                    type = 'date'\n                                    required = {true}\n                                /> \n\n                                < Input \n                                    name='endDate' \n                                    nameValue = {this.state.school.endDate}\n                                    labelName='End date'\n                                    onChange={this.handleChange}\n                                    type = 'date'\n                                    required = {true}\n                                /> \n                            </div>\n                            <div className='row'>\n\n                                < Input \n                                    name='details' \n                                    nameValue = {this.state.school.details}\n                                    labelName='Additional information'\n                                    onChange={this.handleChange}\n                                    required = {false}\n                                    optional = {true}\n                                    type = 'textarea'\n                                    maxLength =\"400\"\n                                /> \n                            </div>\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">\n                                    Submit\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n        } else {\n            content = <div>\n                <ReadyCard places = {this.state.schools} onClick = {this.onClick} onEdit = {this.onEdit}/>\n            </div>\n        }\n        return (\n            <div className='col mx-auto mt-5'>\n                <div className='card'>\n                    <div className='card-header'>\n                        <h3>Education</h3>\n                    </div>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n    \nexport default Education;","import React, {Component} from 'react'; \nimport Input from './Input.js'; \nimport ReadyCard from './ReadyCard.js'\n\n\nclass Experience extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            works: [],\n            work: {\n                name: '',\n                positionOrDegree: '', \n                startDate: '', \n                endDate: '',\n                details: '',\n                id: 0,\n            },\n            toEdit: true, \n            workAdded: 0,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onEdit = this.onEdit.bind(this);\n    }\n\n    handleChange = (e) => {\n        const toChange = e.target.id;\n        this.setState(prevState => {\n            return {\n                work: {\n                    ...prevState.work,\n                    [toChange]: e.target.value\n                }\n            }\n          });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit('work');\n        this.setState (prevState => { \n            for (let i = 0; i < prevState.works.length; i ++) {\n                if (prevState.works[i].id === prevState.work.id) {\n                    const newWorks = prevState.works.map(work => {\n                        if (work.id === prevState.work.id) {\n                            return prevState.work\n                        } else {\n                            return work\n                        }\n                    })\n                    return {\n                        works: newWorks,\n                        work: {\n                            name: '',\n                            positionOrDegree: '', \n                            startDate: '', \n                            endDate: '',\n                            details: '', \n                            id: prevState.worksAdded,\n                        },\n                        toEdit: !prevState.toEdit,\n                        worksAdded: prevState.worksAdded,\n                    }\n                }\n            }\n            return {\n                works: this.state.works.concat(this.state.work),\n                work: {\n                    name: '',\n                    positionOrDegree: '', \n                    startDate: '', \n                    endDate: '',\n                    details: '', \n                    id: prevState.worksAdded + 1,\n                },\n                toEdit: !prevState.toEdit,\n                worksAdded: prevState.worksAdded + 1,\n\n            }\n        })\n    }\n\n    onEdit = (id) => {\n        this.setState (prevState => {\n            const editedWork = prevState.works.filter(work => {\n                return (work.id === id)\n            })[0];\n            return  {\n                ...prevState,\n                work: {\n                    name: editedWork.name,\n                    positionOrDegree: editedWork.positionOrDegree, \n                    startDate: editedWork.startDate, \n                    endDate: editedWork.endDate,\n                    details: editedWork.details, \n                    id: editedWork.id,\n                },\n                toEdit: !prevState.toEdit\n            }\n        })\n    }\n\n    onClick = () => {\n        this.setState(prevState => {\n            return {\n                toEdit: !prevState.toEdit    \n            }\n        })\n    }\n\n    render() {\n        let content\n        if (this.state.toEdit) {\n            content = <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className='row'>\n                                < Input \n                                    name='name' \n                                    nameValue = {this.state.work.name}\n                                    labelName='Company name'\n                                    onChange={this.handleChange}\n                                    type = 'text'\n                                    required = {true}\n                                />\n\n                                < Input \n                                    name='positionOrDegree' \n                                    nameValue = {this.state.work.positionOrDegree}\n                                    labelName='Position'\n                                    onChange={this.handleChange}\n                                    type = 'text'\n                                    required = {true}\n                                />\n\n                                <div className=\"w-100\"></div>\n\n                                < Input \n                                    name='startDate' \n                                    nameValue = {this.state.work.startDate}\n                                    labelName='Start date'\n                                    onChange={this.handleChange}\n                                    type = 'date'\n                                    required = {true}\n                                /> \n\n                                < Input \n                                    name='endDate' \n                                    nameValue = {this.state.work.endDate}\n                                    labelName='End date'\n                                    onChange={this.handleChange}\n                                    type = 'date'\n                                    required = {true}\n                                /> \n                            </div>\n                            <div className='row'>\n\n                                < Input \n                                    name='details' \n                                    nameValue = {this.state.work.details}\n                                    labelName='Details'\n                                    onChange={this.handleChange}\n                                    required = {false}\n                                    optional = {true}\n                                    type = 'textarea'\n                                    maxLength =\"400\"\n                                /> \n                            </div>\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">\n                                    Submit\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n        } else {\n            content = <div>\n                <ReadyCard places = {this.state.works} onClick = {this.onClick} onEdit = {this.onEdit}/>\n            </div>\n        }\n        return (\n            <div className='col mx-auto my-5'>\n                <div className='card'>\n                    <div className='card-header'>\n                        <h3>Work Experience</h3>\n                    </div>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n    \nexport default Experience;","import React, {Component} from 'react';\nimport GeneralInfo from './components/GeneralInfo'\nimport Education from './components/Education'\nimport Experience from './components/Experience'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      generalInfo: false,\n      education: false,\n      experience: false,\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n    handleChange = (props) => {\n      this.setState(prevState  => {\n          return {\n            [props]: !prevState.props\n          }\n        });\n  }\n\n  render () {\n    return (\n      <div className='container'>\n          <GeneralInfo onSubmit={this.handleChange}/>\n          <Education onSubmit={this.handleChange}/>\n          <Experience onSubmit={this.handleChange}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}